name: Deploy Web Site

on:
  push:
    branches: [ main ]
    paths:
      - 'web/site/**'
  workflow_dispatch:

jobs:
  deploy-web:
    runs-on: ubuntu-latest

    env:
      APP_DIR: web/site

    steps:
      - uses: actions/checkout@v4      
        with:
          fetch-depth: 0

      - name: Restore timestamps
        uses: chetan/git-restore-mtime-action@v2

      - name: Set up PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install PHP dependencies
        working-directory: ${{ env.APP_DIR }}
        run: composer install --no-dev --optimize-autoloader

      - name: Prepare publish directory
        run: |
          mkdir -p publish
          rsync -a \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.ddev' \
            --exclude='README' \
            --exclude='LICENSE' \
            --exclude='composer.*' \
            $APP_DIR/ ./publish/

      - name: Create version file
        run: |
          echo "${{ github.ref_name }}" > publish/version.txt

      - name: Deploy Site via SFTP
        uses: wangyucode/sftp-upload-action@v2.0.4
        with:
          host: ${{ vars.FTP_HOST }}
          port: ${{ vars.FTP_PORT }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          localDir: ./publish
          remoteDir: ${{ vars.FTP_REMOTE_DIR }}

      - name: Trigger Update Script
        run: |
          echo "Triggering database update..."

          response=$(curl -sS -X POST \
            -H "Authorization: Bearer ${{ secrets.ADMIN_API_KEY }}" \
            -H "Content-Type: application/json" \
            -w "\n%{http_code}" \
            "${{ vars.BLOG_URL }}/admin/update")

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | sed '$d')

          echo "HTTP Status: $http_code"
          echo "Response: $body"

          if [ "$http_code" -ne 200 ]; then
            echo "Error: Update request failed with HTTP code $http_code"
            exit 1
          fi

          if ! echo "$body" | jq -e . >/dev/null 2>&1; then
            echo "Error: Invalid JSON response"
            exit 1
          fi

          if ! echo "$body" | jq -e '.success == true' >/dev/null 2>&1; then
            error_msg=$(echo "$body" | jq -r '.message // "Unknown error"')
            echo "Error: Update failed - $error_msg"
            exit 1
          fi

          if echo "$body" | jq -e '.results | length > 0' >/dev/null 2>&1; then
            echo "Applied migrations:"
            echo "$body" | jq -r '.results[] | "  - \(.file): \(.status)"'
          else
            echo "No new migrations to apply"
          fi

          echo "Update completed successfully"
