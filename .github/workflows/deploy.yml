name: Deploy Blog

on:
  push:
    branches: [ pain ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install PHP dependencies
        run: composer install --no-dev --optimize-autoloader

      # ─────────────────────────────────────────────────────────────────
      # 1) Generiere die Konfig unter src/_config
      - name: Create _config/config.php
        run: |
          sed \
            -e "s/{{DB_HOST}}/${{ vars.DB_HOST }}/g" \
            -e "s/{{DB_NAME}}/${{ vars.DB_NAME }}/g" \
            -e "s/{{DB_USER}}/${{ secrets.DB_USER }}/g" \
            -e "s/{{DB_PASS}}/${{ secrets.DB_PASS }}/g" \
            -e "s/{{ADMIN_API_KEY}}/${{ secrets.ADMIN_API_KEY }}/g" \
            -e "s/{{BLOG_TITLE}}/${{ vars.BLOG_TITLE }}/g" \
            src/_config/config.template.php > src/_config/config.php

      # (falls ihr weiterhin eine src/Config.template.php nutzt)
      - name: Create src/Config.php
        run: |
          sed \
            -e "s/{{DB_HOST}}/${{ vars.DB_HOST }}/g" \
            -e "s/{{DB_NAME}}/${{ vars.DB_NAME }}/g" \
            -e "s/{{DB_USER}}/${{ secrets.DB_USER }}/g" \
            -e "s/{{DB_PASS}}/${{ secrets.DB_PASS }}/g" \
            -e "s/{{ADMIN_API_KEY}}/${{ secrets.ADMIN_API_KEY }}/g" \
            -e "s/{{BLOG_TITLE}}/${{ vars.BLOG_TITLE }}/g" \
            src/Config.template.php > src/Config.php

      # ─────────────────────────────────────────────────────────────────
      # 2) Deployment per SFTP – wir kopieren nur den Inhalt von src/wwwroot in den Web-Root
      - name: Deploy to Strato via SFTP
        uses: wangyucode/sftp-upload-action@v2.0.4
        with:
          host: ${{ vars.FTP_HOST }}
          port: ${{ vars.FTP_PORT }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          localDir: src/wwwroot         # Web-Root-Ordner
          remoteDir: ${{ vars.FTP_REMOTE_DIR }}
          exclude: |
            .git
            .github
            README
            LICENSE
            ../src/_config/config.template.php

      # ─────────────────────────────────────────────────────────────────
      # 3) Trigger des Update-Skripts
      - name: Trigger Update Script
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${{ secrets.ADMIN_API_KEY }}" \
            "${{ vars.BLOG_URL }}/admin/update"
